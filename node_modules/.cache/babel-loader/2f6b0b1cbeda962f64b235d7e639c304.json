{"ast":null,"code":"import * as actionType from './actionsTypes';\nexport const buildActions = dispatch => {\n  return {\n    playerChoice: choice => dispatch({\n      type: actionType.PLAYER_CHOICE,\n      payload: choice\n    }),\n    machineChoice: () => {\n      dispatch({\n        type: actionType.MACHINE_CHOICE\n      });\n      dispatch({\n        type: actionType.GAME_RESULT\n      });\n    },\n    playAgain: () => dispatch({\n      type: actionType.PLAY_AGAIN\n    }),\n    getPreviousScore: () => dispatch({\n      type: actionType.GET_PREVIOUS_SCORE\n    })\n  };\n};","map":{"version":3,"names":["actionType","buildActions","dispatch","playerChoice","choice","type","PLAYER_CHOICE","payload","machineChoice","MACHINE_CHOICE","GAME_RESULT","playAgain","PLAY_AGAIN","getPreviousScore","GET_PREVIOUS_SCORE"],"sources":["C:/Users/erras/OneDrive/Рабочий стол/rock-paper-scissors-react-app/src/contexts/AppContext/buildActions.js"],"sourcesContent":["import * as actionType from './actionsTypes';\n\nexport const buildActions = (dispatch) => {\n  return {\n    playerChoice: (choice) => dispatch({ type: actionType.PLAYER_CHOICE, payload: choice }),\n    machineChoice: () => {\n      dispatch({ type: actionType.MACHINE_CHOICE });\n      dispatch({ type: actionType.GAME_RESULT });\n    },\n    playAgain: () => dispatch({ type: actionType.PLAY_AGAIN }),\n    getPreviousScore: () => dispatch({ type: actionType.GET_PREVIOUS_SCORE }),\n  };\n};\n"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,gBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc;EACxC,OAAO;IACLC,YAAY,EAAGC,MAAD,IAAYF,QAAQ,CAAC;MAAEG,IAAI,EAAEL,UAAU,CAACM,aAAnB;MAAkCC,OAAO,EAAEH;IAA3C,CAAD,CAD7B;IAELI,aAAa,EAAE,MAAM;MACnBN,QAAQ,CAAC;QAAEG,IAAI,EAAEL,UAAU,CAACS;MAAnB,CAAD,CAAR;MACAP,QAAQ,CAAC;QAAEG,IAAI,EAAEL,UAAU,CAACU;MAAnB,CAAD,CAAR;IACD,CALI;IAMLC,SAAS,EAAE,MAAMT,QAAQ,CAAC;MAAEG,IAAI,EAAEL,UAAU,CAACY;IAAnB,CAAD,CANpB;IAOLC,gBAAgB,EAAE,MAAMX,QAAQ,CAAC;MAAEG,IAAI,EAAEL,UAAU,CAACc;IAAnB,CAAD;EAP3B,CAAP;AASD,CAVM"},"metadata":{},"sourceType":"module"}